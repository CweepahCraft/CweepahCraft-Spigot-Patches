From 924da39beb466928aa57ae639254526917b194d8 Mon Sep 17 00:00:00 2001
From: Jacob Martin <jjm_223@hotmail.com>
Date: Mon, 21 Aug 2017 14:40:44 -0500
Subject: [PATCH] Add mysterious armor


diff --git a/nms-patches/Item.patch b/nms-patches/Item.patch
new file mode 100644
index 0000000..62633ee
--- /dev/null
+++ b/nms-patches/Item.patch
@@ -0,0 +1,51 @@
+--- a/net/minecraft/server/Item.java
++++ b/net/minecraft/server/Item.java
+@@ -3,10 +3,11 @@
+ import com.google.common.collect.HashMultimap;
+ import com.google.common.collect.Maps;
+ import com.google.common.collect.Multimap;
++
++import javax.annotation.Nullable;
+ import java.util.Map;
+ import java.util.Random;
+ import java.util.UUID;
+-import javax.annotation.Nullable;
+ 
+ public class Item {
+ 
+@@ -33,11 +34,11 @@
+     private String name;
+ 
+     public static int getId(Item item) {
+-        return item == null ? 0 : Item.REGISTRY.a((Object) item);
++        return item == null ? 0 : Item.REGISTRY.a(item);
+     }
+ 
+     public static Item getById(int i) {
+-        return (Item) Item.REGISTRY.getId(i);
++        return Item.REGISTRY.getId(i);
+     }
+ 
+     public static Item getItemOf(Block block) {
+@@ -607,6 +608,12 @@
+         a(315, "golden_chestplate", (new ItemArmor(ItemArmor.EnumArmorMaterial.GOLD, 4, EnumItemSlot.CHEST)).c("chestplateGold"));
+         a(316, "golden_leggings", (new ItemArmor(ItemArmor.EnumArmorMaterial.GOLD, 4, EnumItemSlot.LEGS)).c("leggingsGold"));
+         a(317, "golden_boots", (new ItemArmor(ItemArmor.EnumArmorMaterial.GOLD, 4, EnumItemSlot.FEET)).c("bootsGold"));
++        // CweepahCraft start
++        a(31996, "mysterious_helmet", (new ItemArmor(ItemArmor.EnumArmorMaterial.MYSTERIOUS, 5, EnumItemSlot.HEAD)).c("helmetMysterious"));
++        a(31997, "mysterious_chestplate", (new ItemArmor(ItemArmor.EnumArmorMaterial.MYSTERIOUS, 5, EnumItemSlot.CHEST)).c("chestplateMysterious"));
++        a(31998, "mysterious_leggings", (new ItemArmor(ItemArmor.EnumArmorMaterial.MYSTERIOUS, 5, EnumItemSlot.LEGS)).c("leggingsMysterious"));
++        a(31999, "mysterious_boots", (new ItemArmor(ItemArmor.EnumArmorMaterial.MYSTERIOUS, 5, EnumItemSlot.FEET)).c("bootsMysterious"));
++        // CweepahCraft end
+         a(318, "flint", (new Item()).c("flint").b(CreativeModeTab.l));
+         a(319, "porkchop", (new ItemFood(3, 0.3F, true)).c("porkchopRaw"));
+         a(320, "cooked_porkchop", (new ItemFood(8, 0.8F, true)).c("porkchopCooked"));
+@@ -777,7 +784,7 @@
+         Item.REGISTRY.a(i, minecraftkey, item);
+     }
+ 
+-    public static enum EnumToolMaterial {
++    public enum EnumToolMaterial {
+ 
+         WOOD(0, 59, 2.0F, 0.0F, 15), STONE(1, 131, 4.0F, 1.0F, 5), IRON(2, 250, 6.0F, 2.0F, 14), DIAMOND(3, 1561, 8.0F, 3.0F, 10), GOLD(0, 32, 12.0F, 0.0F, 22);
+ 
diff --git a/nms-patches/Items.patch b/nms-patches/Items.patch
new file mode 100644
index 0000000..3b6e155
--- /dev/null
+++ b/nms-patches/Items.patch
@@ -0,0 +1,33 @@
+--- a/net/minecraft/server/Items.java
++++ b/net/minecraft/server/Items.java
+@@ -67,6 +67,10 @@
+     public static final ItemArmor GOLDEN_CHESTPLATE;
+     public static final ItemArmor GOLDEN_LEGGINGS;
+     public static final ItemArmor GOLDEN_BOOTS;
++    public static final ItemArmor MYSTERIOUS_HELMET;
++    public static final ItemArmor MYSTERIOUS_CHESTPLATE;
++    public static final ItemArmor MYSTERIOUS_LEGGINGS;
++    public static final ItemArmor MYSTERIOUS_BOOTS;
+     public static final Item FLINT;
+     public static final Item PORKCHOP;
+     public static final Item COOKED_PORKCHOP;
+@@ -214,7 +218,7 @@
+     public static final Item db;
+ 
+     private static Item get(String s) {
+-        Item item = (Item) Item.REGISTRY.get(new MinecraftKey(s));
++        Item item = Item.REGISTRY.get(new MinecraftKey(s));
+ 
+         if (item == null) {
+             throw new IllegalStateException("Invalid Item requested: " + s);
+@@ -292,6 +296,10 @@
+             GOLDEN_CHESTPLATE = (ItemArmor) get("golden_chestplate");
+             GOLDEN_LEGGINGS = (ItemArmor) get("golden_leggings");
+             GOLDEN_BOOTS = (ItemArmor) get("golden_boots");
++            MYSTERIOUS_HELMET = (ItemArmor) get("mysterious_helmet");
++            MYSTERIOUS_CHESTPLATE = (ItemArmor) get("mysterious_chestplate");
++            MYSTERIOUS_LEGGINGS = (ItemArmor) get("mysterious_leggings");
++            MYSTERIOUS_BOOTS = (ItemArmor) get("mysterious_boots");
+             FLINT = get("flint");
+             PORKCHOP = get("porkchop");
+             COOKED_PORKCHOP = get("cooked_porkchop");
diff --git a/src/main/java/net/cweepahcraft/item/ServerSpecificItem.java b/src/main/java/net/cweepahcraft/item/ServerSpecificItem.java
new file mode 100644
index 0000000..fb0a2dd
--- /dev/null
+++ b/src/main/java/net/cweepahcraft/item/ServerSpecificItem.java
@@ -0,0 +1,9 @@
+package net.cweepahcraft.item;
+
+import net.minecraft.server.ItemStack;
+
+public interface ServerSpecificItem {
+    boolean isApplicable(ItemStack itemStack);
+    ItemStack toClientStack(ItemStack itemStack);
+    ItemStack toServerStack(ItemStack itemStack);
+}
diff --git a/src/main/java/net/minecraft/server/ItemArmor.java b/src/main/java/net/minecraft/server/ItemArmor.java
index 921cddd..56fcc0e 100644
--- a/src/main/java/net/minecraft/server/ItemArmor.java
+++ b/src/main/java/net/minecraft/server/ItemArmor.java
@@ -10,7 +10,9 @@ import org.bukkit.craftbukkit.inventory.CraftItemStack;
 import org.bukkit.event.block.BlockDispenseEvent;
 // CraftBukkit end
 
-public class ItemArmor extends Item {
+import net.cweepahcraft.item.ServerSpecificItem; // CweepahCraft
+
+public class ItemArmor extends Item implements ServerSpecificItem {
 
     private static final int[] n = new int[] { 13, 15, 16, 11};
     private static final UUID[] o = new UUID[] { UUID.fromString("845DB27C-C624-495F-8C9F-6020A9A58B6B"), UUID.fromString("D8499B04-0E66-4726-AB29-64469D734E0D"), UUID.fromString("9F3D476D-C118-4544-8365-64846904B48E"), UUID.fromString("2AD3F246-FEE1-4E67-B886-69FD380BB150")};
@@ -86,6 +88,33 @@ public class ItemArmor extends Item {
         BlockDispenser.REGISTRY.a(this, ItemArmor.b);
     }
 
+    @Override
+    public String b(ItemStack stack) {
+        if (this.p == EnumArmorMaterial.MYSTERIOUS) {
+            return this.j(stack);
+        }
+
+        return super.b(stack);
+    }
+
+    @Override
+    public String j(ItemStack stack) { // CweepahCraft - override for mysterious armor
+        if (this.p == EnumArmorMaterial.MYSTERIOUS) {
+            switch (this.c) {
+                case HEAD:
+                    return "Mysterious Helmet";
+                case CHEST:
+                    return "Mysterious Chestplate";
+                case LEGS:
+                    return "Mysterious Leggings";
+                case FEET:
+                    return "Mysterious Boots";
+            }
+        }
+
+        return super.j(stack);
+    }
+
     public int c() {
         return this.p.a();
     }
@@ -95,7 +124,7 @@ public class ItemArmor extends Item {
     }
 
     public boolean e_(ItemStack itemstack) {
-        if (this.p != ItemArmor.EnumArmorMaterial.LEATHER) {
+        if (!this.p.isDyeable()) { // CweepahCraft
             return false;
         } else {
             NBTTagCompound nbttagcompound = itemstack.getTag();
@@ -105,7 +134,7 @@ public class ItemArmor extends Item {
     }
 
     public int c(ItemStack itemstack) {
-        if (this.p != ItemArmor.EnumArmorMaterial.LEATHER) {
+        if (!this.p.isDyeable()) { // CweepahCraft
             return 16777215;
         } else {
             NBTTagCompound nbttagcompound = itemstack.getTag();
@@ -123,7 +152,7 @@ public class ItemArmor extends Item {
     }
 
     public void d(ItemStack itemstack) {
-        if (this.p == ItemArmor.EnumArmorMaterial.LEATHER) {
+        if (this.p.isDyeable()) { // CweepahCraft
             NBTTagCompound nbttagcompound = itemstack.getTag();
 
             if (nbttagcompound != null) {
@@ -138,7 +167,7 @@ public class ItemArmor extends Item {
     }
 
     public void a(ItemStack itemstack, int i) {
-        if (this.p != ItemArmor.EnumArmorMaterial.LEATHER) {
+        if (!this.p.isDyeable()) { // CweepahCraft
             throw new UnsupportedOperationException("Can\'t dye non-leather!");
         } else {
             NBTTagCompound nbttagcompound = itemstack.getTag();
@@ -187,9 +216,106 @@ public class ItemArmor extends Item {
         return multimap;
     }
 
+    // CweepahCraft start
+    @Override
+    public boolean isApplicable(ItemStack itemStack) {
+        return this.p == EnumArmorMaterial.MYSTERIOUS;
+    }
+
+    @Override
+    public ItemStack toClientStack(ItemStack itemStack) {
+        Item clientItem = Item.getById(Item.getId(this) - 31698);
+        ItemStack clientStack = new ItemStack(clientItem);
+
+        clientStack.setCount(itemStack.getCount());
+        clientStack.setData(itemStack.getData() * clientItem.getMaxDurability() / this.getMaxDurability());
+
+        NBTTagCompound tag = itemStack.getTag();
+        if (tag == null) {
+            tag = new NBTTagCompound();
+        } else {
+            tag = (NBTTagCompound) tag.clone();
+        }
+
+        if (!tag.hasKey("AttributeModifiers")) {
+            tag.set("AttributeModifiers", attributesToTag(itemStack));
+        }
+
+        tag.setShort("ServerData", (short) itemStack.getData());
+
+        if (!e_(itemStack)) {
+            NBTTagCompound display = tag.getCompound("display");
+            display.setInt("color", 0);
+            tag.set("display", display);
+        }
+
+        clientStack.setTag(tag);
+        return clientStack;
+    }
+
+    @Override
+    public ItemStack toServerStack(ItemStack itemStack) {
+        Item clientItem = itemStack.getItem();
+        ItemStack serverStack = new ItemStack(this);
+
+        serverStack.setCount(itemStack.getCount());
+
+        NBTTagCompound tag = itemStack.getTag();
+        if (tag == null) {
+            return serverStack;
+        } else {
+            tag = (NBTTagCompound) tag.clone();
+        }
+
+        if (tag.hasKeyOfType("ServerData", 2)) {
+            serverStack.setData(tag.getShort("ServerData"));
+            tag.remove("ServerData");
+        } else {
+            serverStack.setData(itemStack.getData() * this.getMaxDurability() / clientItem.getMaxDurability());
+        }
+
+        if (tag.hasKey("AttributeModifiers") && tag.get("AttributeModifiers").equals(attributesToTag(new ItemStack(this)))) {
+            tag.remove("AttributeModifiers");
+        }
+
+        if (tag.hasKeyOfType("display", 10)) {
+            NBTTagCompound display = tag.getCompound("display");
+            if (display.hasKeyOfType("color", 3) && display.getInt("color") == 0) {
+                display.remove("color");
+            }
+        }
+
+        serverStack.setTag(tag);
+        return serverStack;
+    }
+
+    private NBTBase attributesToTag(ItemStack itemstack) {
+        ItemStack attributeStack = itemstack.cloneItemStack();
+        EnumItemSlot slot = ((ItemArmor) itemstack.getItem()).c;
+        Multimap<String, AttributeModifier> modifiers = itemstack.a(slot);
+        for (String name : modifiers.keySet()) {
+            for (AttributeModifier modifier : modifiers.get(name)) {
+                attributeStack.a(name, modifier, slot);
+            }
+        }
+
+        NBTTagCompound attributeStackCompound = attributeStack.getTag();
+        if (attributeStackCompound != null) {
+            return attributeStackCompound.get("AttributeModifiers");
+        } else {
+            return null;
+        }
+    }
+    // CweepahCraft end
+
     public static enum EnumArmorMaterial {
 
-        LEATHER("leather", 5, new int[] { 1, 2, 3, 1}, 15, SoundEffects.t, 0.0F), CHAIN("chainmail", 15, new int[] { 1, 4, 5, 2}, 12, SoundEffects.n, 0.0F), IRON("iron", 15, new int[] { 2, 5, 6, 2}, 9, SoundEffects.s, 0.0F), GOLD("gold", 7, new int[] { 1, 3, 5, 2}, 25, SoundEffects.r, 0.0F), DIAMOND("diamond", 33, new int[] { 3, 6, 8, 3}, 10, SoundEffects.o, 2.0F);
+        LEATHER("leather", 5, new int[] { 1, 2, 3, 1}, 15, SoundEffects.t, 0.0F, true),
+        CHAIN("chainmail", 15, new int[] { 1, 4, 5, 2}, 12, SoundEffects.n, 0.0F),
+        IRON("iron", 15, new int[] { 2, 5, 6, 2}, 9, SoundEffects.s, 0.0F),
+        GOLD("gold", 7, new int[] { 1, 3, 5, 2}, 25, SoundEffects.r, 0.0F),
+        DIAMOND("diamond", 33, new int[] { 3, 6, 8, 3}, 10, SoundEffects.o, 2.0F),
+        MYSTERIOUS("mysterious", 66, new int[] { 6, 12, 16, 6 }, 20, SoundEffects.t, 3.0F, true);
 
         private final String f;
         private final int g;
@@ -197,15 +323,23 @@ public class ItemArmor extends Item {
         private final int i;
         private final SoundEffect j;
         private final float k;
+        private final boolean dyeable;
+
+        EnumArmorMaterial(String s, int i, int[] aint, int j, SoundEffect soundeffect, float f) {
+            this(s, i, aint, j, soundeffect, f, false); // CweepahCraft - initializing code moved below to new constructor
+        }
 
-        private EnumArmorMaterial(String s, int i, int[] aint, int j, SoundEffect soundeffect, float f) {
-            this.f = s;
-            this.g = i;
-            this.h = aint;
-            this.i = j;
-            this.j = soundeffect;
-            this.k = f;
+        // CweepahCraft start
+        EnumArmorMaterial(String typeName, int durabilityMultiplier, int[] protection, int enchantability, SoundEffect equipSound, float toughness, boolean dyeable) {
+            this.f = typeName;
+            this.g = durabilityMultiplier;
+            this.h = protection;
+            this.i = enchantability;
+            this.j = equipSound;
+            this.k = toughness;
+            this.dyeable = dyeable;
         }
+        // CweepahCraft end
 
         public int a(EnumItemSlot enumitemslot) {
             return ItemArmor.n[enumitemslot.b()] * this.g;
@@ -223,8 +357,26 @@ public class ItemArmor extends Item {
             return this.j;
         }
 
+        public boolean isDyeable() {
+            return this.dyeable;
+        }
+
         public Item c() {
-            return this == ItemArmor.EnumArmorMaterial.LEATHER ? Items.LEATHER : (this == ItemArmor.EnumArmorMaterial.CHAIN ? Items.IRON_INGOT : (this == ItemArmor.EnumArmorMaterial.GOLD ? Items.GOLD_INGOT : (this == ItemArmor.EnumArmorMaterial.IRON ? Items.IRON_INGOT : (this == ItemArmor.EnumArmorMaterial.DIAMOND ? Items.DIAMOND : null))));
+            // CweepahCraft start - changed from ternary operators to a switch statement
+            switch (this) {
+                case LEATHER:
+                    return Items.LEATHER;
+                case CHAIN:
+                    return Items.IRON_INGOT;
+                case IRON:
+                    return Items.IRON_INGOT;
+                case GOLD:
+                    return Items.GOLD_INGOT;
+                case DIAMOND:
+                    return Items.DIAMOND;
+                default: return null;
+            }
+            // CweepahCraft end
         }
 
         public float e() {
diff --git a/src/main/java/net/minecraft/server/PacketDataSerializer.java b/src/main/java/net/minecraft/server/PacketDataSerializer.java
index a8fc7e4..c7ebd0f 100644
--- a/src/main/java/net/minecraft/server/PacketDataSerializer.java
+++ b/src/main/java/net/minecraft/server/PacketDataSerializer.java
@@ -25,6 +25,8 @@ import javax.annotation.Nullable;
 
 import org.bukkit.craftbukkit.inventory.CraftItemStack; // CraftBukkit
 
+import net.cweepahcraft.item.ServerSpecificItem; // CweepahCraft
+
 public class PacketDataSerializer extends ByteBuf {
 
     private final ByteBuf a;
@@ -239,9 +241,6 @@ public class PacketDataSerializer extends ByteBuf {
         if (itemstack.isEmpty() || itemstack.getItem() == null) { // CraftBukkit - NPE fix itemstack.getItem()
             this.writeShort(-1);
         } else {
-            this.writeShort(Item.getId(itemstack.getItem()));
-            this.writeByte(itemstack.getCount());
-            this.writeShort(itemstack.getData());
             NBTTagCompound nbttagcompound = null;
 
             if (itemstack.getItem().usesDurability() || itemstack.getItem().p()) {
@@ -252,7 +251,34 @@ public class PacketDataSerializer extends ByteBuf {
                 nbttagcompound = itemstack.getTag();
             }
 
-            this.a(nbttagcompound);
+            // CweepahCraft start
+            Item serverItem = itemstack.getItem();
+
+            if (serverItem instanceof ServerSpecificItem && ((ServerSpecificItem) serverItem).isApplicable(itemstack)) {
+                if (nbttagcompound == null) {
+                    nbttagcompound = new NBTTagCompound();
+                    itemstack = itemstack.cloneItemStack();
+                    itemstack.setTag(nbttagcompound);
+                }
+
+                nbttagcompound.setShort("ServerId", (short) Item.getId(serverItem));
+
+                NBTTagCompound display = nbttagcompound.getCompound("display");
+                if (!display.hasKey("Name")) {
+                    display.setString("Name", serverItem.j(null));
+                    nbttagcompound.set("display", display);
+                }
+
+                itemstack = ((ServerSpecificItem) serverItem).toClientStack(itemstack);
+            }
+            // CweepahCraft end
+
+            // CweepahCraft start - moved down from above
+            this.writeShort(Item.getId(itemstack.getItem()));
+            this.writeByte(itemstack.getCount());
+            this.writeShort(itemstack.getData());
+            // CweepahCraft end
+            this.a(itemstack.getTag());
         }
 
         return this;
@@ -267,8 +293,26 @@ public class PacketDataSerializer extends ByteBuf {
             byte b0 = this.readByte();
             short short1 = this.readShort();
             ItemStack itemstack = new ItemStack(Item.getById(short0), b0, short1);
+            // CweepahCraft start
+            NBTTagCompound compound = this.j();
+
+            itemstack.setTag(compound);
+
+            if (compound != null && compound.hasKeyOfType("ServerId", 2)) {
+                Item serverItem = Item.getById(compound.getShort("ServerId"));
+                compound.remove("ServerId");
+
+                NBTTagCompound display = compound.getCompound("display");
+                if (display.hasKeyOfType("Name", 8)) {
+                    if (display.getString("Name").equals(serverItem.j(null))) {
+                        display.remove("Name");
+                    }
+                }
+
+                itemstack = ((ServerSpecificItem) serverItem).toServerStack(itemstack);
+            }
+            // CweepahCraft end
 
-            itemstack.setTag(this.j());
             // CraftBukkit start
             if (itemstack.getTag() != null) {
                 CraftItemStack.setItemMeta(itemstack, CraftItemStack.getItemMeta(itemstack));
diff --git a/src/main/java/net/minecraft/server/RecipeArmorDye.java b/src/main/java/net/minecraft/server/RecipeArmorDye.java
index 123002e..4a4cf7e 100644
--- a/src/main/java/net/minecraft/server/RecipeArmorDye.java
+++ b/src/main/java/net/minecraft/server/RecipeArmorDye.java
@@ -22,7 +22,7 @@ public class RecipeArmorDye extends ShapelessRecipes implements IRecipe { // Cra
                 if (itemstack1.getItem() instanceof ItemArmor) {
                     ItemArmor itemarmor = (ItemArmor) itemstack1.getItem();
 
-                    if (itemarmor.d() != ItemArmor.EnumArmorMaterial.LEATHER || !itemstack.isEmpty()) {
+                    if (!itemarmor.d().isDyeable() || !itemstack.isEmpty()) {
                         return false;
                     }
 
@@ -59,7 +59,7 @@ public class RecipeArmorDye extends ShapelessRecipes implements IRecipe { // Cra
             if (!itemstack1.isEmpty()) {
                 if (itemstack1.getItem() instanceof ItemArmor) {
                     itemarmor = (ItemArmor) itemstack1.getItem();
-                    if (itemarmor.d() != ItemArmor.EnumArmorMaterial.LEATHER || !itemstack.isEmpty()) {
+                    if (!itemarmor.d().isDyeable() || !itemstack.isEmpty()) {
                         return ItemStack.a;
                     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java
index 49ebad2..9612bf8 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemFactory.java
@@ -76,6 +76,10 @@ public final class CraftItemFactory implements ItemFactory {
         case LEATHER_CHESTPLATE:
         case LEATHER_LEGGINGS:
         case LEATHER_BOOTS:
+        case MYSTERIOUS_HELMET:
+        case MYSTERIOUS_CHESTPLATE:
+        case MYSTERIOUS_LEGGINGS:
+        case MYSTERIOUS_BOOTS:
             return meta instanceof CraftMetaLeatherArmor ? meta : new CraftMetaLeatherArmor(meta);
         case POTION:
         case SPLASH_POTION:
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
index fb1dc54..cb30efd 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftItemStack.java
@@ -335,6 +335,10 @@ public final class CraftItemStack extends ItemStack {
             case LEATHER_CHESTPLATE:
             case LEATHER_LEGGINGS:
             case LEATHER_BOOTS:
+            case MYSTERIOUS_HELMET:
+            case MYSTERIOUS_CHESTPLATE:
+            case MYSTERIOUS_LEGGINGS:
+            case MYSTERIOUS_BOOTS:
                 return new CraftMetaLeatherArmor(item.getTag());
             case POTION:
             case SPLASH_POTION:
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaLeatherArmor.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaLeatherArmor.java
index 5478e9b..2e306b7 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaLeatherArmor.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaLeatherArmor.java
@@ -71,6 +71,10 @@ class CraftMetaLeatherArmor extends CraftMetaItem implements LeatherArmorMeta {
             case LEATHER_CHESTPLATE:
             case LEATHER_LEGGINGS:
             case LEATHER_BOOTS:
+            case MYSTERIOUS_HELMET:
+            case MYSTERIOUS_CHESTPLATE:
+            case MYSTERIOUS_LEGGINGS:
+            case MYSTERIOUS_BOOTS:
                 return true;
             default:
                 return false;
-- 
1.9.1

